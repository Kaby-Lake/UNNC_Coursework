// This file is part of CSF 2019 Coursework Part â… 
// by 20126507 hnyzx3 Zichen Xu.

/**CUSTOMIZED CHIP INSIDE
 * >> ExpMult16     (Mult (16-bit) a with (4-bit) b)
*/

/**
 * unsigned int Exponent Gate:  x^y
 * a and b should be positive, x <= 9 && y <= 5
 * Overflow detected
*/

CHIP Exp16 {
    IN
        a[16], b[16];

    OUT
        out[16], of;


    PARTS:
    /*
    We just have to multiply each time with a 4-bit int
    (the max: 9 is inside the 4-bit range)
    For this reason, I created an ExpMult16 Gate
    whose job is to Mult (16-bit) a with (4-bit) b)
    */

    ExpMult16(a=a, b=a[0..3], out=pow2out, of=pow2of);         // Calculate pow(a, 2)
    ExpMult16(a=pow2out, b=a[0..3], out=pow3out, of=pow3of);   // Calculate pow(a, 3)
    ExpMult16(a=pow3out, b=a[0..3], out=pow4out, of=pow4of);   // Calculate pow(a, 4)
    ExpMult16(a=pow4out, b=a[0..3], out=pow5out, of=pow5of);   // Calculate pow(a, 5)
    Mux8Way16(a=false, b=a, c=pow2out, d=pow3out, e=pow4out, f=pow5out, g=false, h=false, sel=b[0..2], out=out);
    // Choose between power of 1-5 according to int b
    // value 0,6,7 of input b is not valid, in which case, returns false

    Or(a=pow2of, b=pow3of, out=tempof23);
    Or(a=tempof23, b=pow4of, out=tempof234);
    Or(a=tempof234, b=pow5of, out=of);
    // Use Or Gate which connects 4 Overflow signs generated before to denote overall Overflow
}

